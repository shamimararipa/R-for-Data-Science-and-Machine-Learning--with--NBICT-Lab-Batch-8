# calculating some health parameter
my_age = 97
my_weight = 60
my_height = 65
x = (my_height * my_age) / my_weight
print(x)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
# Data types in R
# 1. Numeric - Integer/Floating point
# 2. string/Character - "Ms. Shamim Ara Ripa"
# 3. Logical
a = 11
b = 7.19
class(a)
class(b)
name = "Ms. Shamim Ara Ripa"
print(name)
class(name)
c = "52"
print(c+9)
setwd("E:/NBICT Lab Work/R-for-Data-Science-and-Machine-Learning--with--NBICT-Lab-Batch-8/Practice file/HW Day 14")
# Importing the dataset
dataset = read.csv("data.csv")
View(dataset)
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, ase(x = weight)) +
geom_histogram()
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram()
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5)
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "identity")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "stack")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
theme(legend.position = "top")
# The plyr package is used to calculate the mean weight of each group
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean))
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean))
theme(legend.position = "top")
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex), linetype = "dashed")
theme(legend.position = "top")
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex), linetype = "dashed")
theme(legend.position = "top")
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey()
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
